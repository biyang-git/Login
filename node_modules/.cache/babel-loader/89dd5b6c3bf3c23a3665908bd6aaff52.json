{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getIcons;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _LoadingOutlined = _interopRequireDefault(require(\"@ant-design/icons/LoadingOutlined\"));\n\nvar _CheckOutlined = _interopRequireDefault(require(\"@ant-design/icons/CheckOutlined\"));\n\nvar _CloseOutlined = _interopRequireDefault(require(\"@ant-design/icons/CloseOutlined\"));\n\nvar _CloseCircleFilled = _interopRequireDefault(require(\"@ant-design/icons/CloseCircleFilled\"));\n\nvar _SearchOutlined = _interopRequireDefault(require(\"@ant-design/icons/SearchOutlined\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction getIcons(_ref) {\n  var suffixIcon = _ref.suffixIcon,\n      clearIcon = _ref.clearIcon,\n      menuItemSelectedIcon = _ref.menuItemSelectedIcon,\n      removeIcon = _ref.removeIcon,\n      loading = _ref.loading,\n      multiple = _ref.multiple; // Clear Icon\n\n  var mergedClearIcon = clearIcon;\n\n  if (!clearIcon) {\n    mergedClearIcon =\n    /*#__PURE__*/\n    React.createElement(_CloseCircleFilled[\"default\"], null);\n  } // Arrow item icon\n\n\n  var mergedSuffixIcon = null;\n\n  if (suffixIcon !== undefined) {\n    mergedSuffixIcon = suffixIcon;\n  } else if (loading) {\n    mergedSuffixIcon =\n    /*#__PURE__*/\n    React.createElement(_LoadingOutlined[\"default\"], {\n      spin: true\n    });\n  } else {\n    mergedSuffixIcon = function mergedSuffixIcon(_ref2) {\n      var open = _ref2.open,\n          showSearch = _ref2.showSearch;\n\n      if (open && showSearch) {\n        return (\n          /*#__PURE__*/\n          React.createElement(_SearchOutlined[\"default\"], null)\n        );\n      }\n\n      return (\n        /*#__PURE__*/\n        React.createElement(_DownOutlined[\"default\"], null)\n      );\n    };\n  } // Checked item icon\n\n\n  var mergedItemIcon = null;\n\n  if (menuItemSelectedIcon !== undefined) {\n    mergedItemIcon = menuItemSelectedIcon;\n  } else if (multiple) {\n    mergedItemIcon =\n    /*#__PURE__*/\n    React.createElement(_CheckOutlined[\"default\"], null);\n  } else {\n    mergedItemIcon = null;\n  }\n\n  var mergedRemoveIcon = null;\n\n  if (removeIcon !== undefined) {\n    mergedRemoveIcon = removeIcon;\n  } else {\n    mergedRemoveIcon =\n    /*#__PURE__*/\n    React.createElement(_CloseOutlined[\"default\"], null);\n  }\n\n  return {\n    clearIcon: mergedClearIcon,\n    suffixIcon: mergedSuffixIcon,\n    itemIcon: mergedItemIcon,\n    removeIcon: mergedRemoveIcon\n  };\n}","map":null,"metadata":{},"sourceType":"script"}