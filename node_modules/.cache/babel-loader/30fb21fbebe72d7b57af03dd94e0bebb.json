{"ast":null,"code":"import _slicedToArray from \"/Users/biyang/Documents/react/React-Mock-Demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biyang/Documents/react/React-Mock-Demo/src/components/Hook-Mock.jsx\";\n\n/* eslint-disable */\nimport React from 'react';\nimport { useState } from 'react';\nexport default function HookMock() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Hook useState\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"count:\", count), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"\\u70B9\\u51FB+1\"), React.createElement(\"button\", {\n    onClick: () => setCount(count - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"\\u70B9\\u51FB-1\"), React.createElement(\"button\", {\n    onClick: () => setCount(0),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"\\u521D\\u59CB\\u5316\"));\n}","map":{"version":3,"sources":["/Users/biyang/Documents/react/React-Mock-Demo/src/components/Hook-Mock.jsx"],"names":["React","useState","HookMock","count","setCount"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,QAAT,GAAqB;AAAA,oBACPD,QAAQ,CAAC,CAAD,CADD;AAAA;AAAA,QAC1BE,KAD0B;AAAA,QACnBC,QADmB;;AAGhC,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAYD,KAAZ,CAHJ,EAII;AACA,IAAA,OAAO,EAAI,MAAKC,QAAQ,CAAED,KAAK,GAAG,CAAV,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,EAOI;AACA,IAAA,OAAO,EAAI,MAAKC,QAAQ,CAAED,KAAK,GAAG,CAAV,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,EAUI;AACA,IAAA,OAAO,EAAI,MAAKC,QAAQ,CAAC,CAAD,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVJ,CADJ;AAgBH","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport { useState } from 'react';\n\nexport default function HookMock () {\n   const [count, setCount] = useState(0)\n\n    return (\n        <>\n            <br /><hr />\n            <h1>Hook useState</h1>\n            <h1>count:{ count }</h1>\n            <button\n            onClick = {()=> setCount( count + 1 )}\n            >点击+1</button>\n            <button\n            onClick = {()=> setCount( count - 1 )}\n            >点击-1</button>\n            <button\n            onClick = {()=> setCount(0)}\n            >初始化</button>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}