{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _LoadingOutlined = _interopRequireDefault(require(\"@ant-design/icons/LoadingOutlined\"));\n\nvar _CloseCircleFilled = _interopRequireDefault(require(\"@ant-design/icons/CloseCircleFilled\"));\n\nvar _CheckCircleFilled = _interopRequireDefault(require(\"@ant-design/icons/CheckCircleFilled\"));\n\nvar _ExclamationCircleFilled = _interopRequireDefault(require(\"@ant-design/icons/ExclamationCircleFilled\"));\n\nvar _useMemo = _interopRequireDefault(require(\"rc-util/lib/hooks/useMemo\"));\n\nvar _CSSMotion = _interopRequireDefault(require(\"rc-animate/lib/CSSMotion\"));\n\nvar _col = _interopRequireDefault(require(\"../grid/col\"));\n\nvar _context = require(\"./context\");\n\nvar _util = require(\"./util\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar iconMap = {\n  success: _CheckCircleFilled[\"default\"],\n  warning: _ExclamationCircleFilled[\"default\"],\n  error: _CloseCircleFilled[\"default\"],\n  validating: _LoadingOutlined[\"default\"]\n};\n\nvar FormItemInput = function FormItemInput(_ref) {\n  var prefixCls = _ref.prefixCls,\n      wrapperCol = _ref.wrapperCol,\n      children = _ref.children,\n      help = _ref.help,\n      errors = _ref.errors,\n      onDomErrorVisibleChange = _ref.onDomErrorVisibleChange,\n      hasFeedback = _ref.hasFeedback,\n      validateStatus = _ref.validateStatus,\n      extra = _ref.extra;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  var baseClassName = \"\".concat(prefixCls, \"-item\");\n  var formContext = React.useContext(_context.FormContext);\n  var mergedWrapperCol = wrapperCol || formContext.wrapperCol || {};\n  var className = (0, _classnames[\"default\"])(\"\".concat(baseClassName, \"-control\"), mergedWrapperCol.className);\n\n  var _useCacheErrors = (0, _util.useCacheErrors)(errors, function (changedVisible) {\n    if (changedVisible) {\n      /**\n       * We trigger in sync to avoid dom shaking but this get warning in react 16.13.\n       * So use Promise to keep in micro async to handle this.\n       * https://github.com/ant-design/ant-design/issues/21698#issuecomment-593743485\n       */\n      Promise.resolve().then(function () {\n        onDomErrorVisibleChange(true);\n      });\n    }\n\n    forceUpdate({});\n  }, !!help),\n      _useCacheErrors2 = _slicedToArray(_useCacheErrors, 2),\n      visible = _useCacheErrors2[0],\n      cacheErrors = _useCacheErrors2[1];\n\n  React.useEffect(function () {\n    return function () {\n      onDomErrorVisibleChange(false);\n    };\n  }, []);\n  var memoErrors = (0, _useMemo[\"default\"])(function () {\n    return cacheErrors;\n  }, visible, function (_, nextVisible) {\n    return nextVisible;\n  }); // Should provides additional icon if `hasFeedback`\n\n  var IconNode = validateStatus && iconMap[validateStatus];\n  var icon = hasFeedback && IconNode ?\n  /*#__PURE__*/\n  React.createElement(\"span\", {\n    className: \"\".concat(baseClassName, \"-children-icon\")\n  },\n  /*#__PURE__*/\n  React.createElement(IconNode, null)) : null; // Pass to sub FormItem should not with col info\n\n  var subFormContext = _extends({}, formContext);\n\n  delete subFormContext.labelCol;\n  delete subFormContext.wrapperCol;\n  return (\n    /*#__PURE__*/\n    React.createElement(_context.FormContext.Provider, {\n      value: subFormContext\n    },\n    /*#__PURE__*/\n    React.createElement(_col[\"default\"], _extends({}, mergedWrapperCol, {\n      className: className\n    }),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"\".concat(baseClassName, \"-control-input\")\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"\".concat(baseClassName, \"-control-input-content\")\n    }, children), icon),\n    /*#__PURE__*/\n    React.createElement(_CSSMotion[\"default\"], {\n      visible: visible,\n      motionName: \"show-help\",\n      onLeaveEnd: function onLeaveEnd() {\n        onDomErrorVisibleChange(false);\n      },\n      motionAppear: true,\n      removeOnLeave: true\n    }, function (_ref2) {\n      var motionClassName = _ref2.className;\n      return (\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: (0, _classnames[\"default\"])(\"\".concat(baseClassName, \"-explain\"), motionClassName),\n          key: \"help\"\n        }, memoErrors.map(function (error, index) {\n          return (\n            /*#__PURE__*/\n            // eslint-disable-next-line react/no-array-index-key\n            React.createElement(\"div\", {\n              key: index\n            }, error)\n          );\n        }))\n      );\n    }), extra &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"\".concat(baseClassName, \"-extra\")\n    }, extra)))\n  );\n};\n\nvar _default = FormItemInput;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}